// Enable HTTP UI and debug logs
livedebugging {
  enabled = true
}

// Relabel syslog fields to structured labels
discovery.relabel "syslog" {
  targets = []

  rule {
    source_labels = ["__syslog_message_app_name"]
    target_label  = "service_name"
  }

  rule {
    source_labels = ["__syslog_message_hostname"]
    target_label  = "host"
  }

  rule {
    source_labels = ["__syslog_message_severity"]
    target_label  = "level"
  }

  rule {
    source_labels = ["__syslog_message_app_name"]
    target_label  = "app"
  }

  rule {
    source_labels = ["__syslog_message_facility"]
    target_label  = "facility"
  }

  rule {
    source_labels = ["__syslog_connection_hostname"]
    target_label  = "connection_host"
  }

  rule {
    source_labels = ["__syslog_connection_ip"]
    target_label  = "ip"
  }

  // Optional: fallback if __syslog_message_host_ip exists
  rule {
    source_labels = ["__syslog_message_host_ip"]
    target_label  = "host_ip"
  }
}

// Syslog ingestion over both TCP and UDP
loki.source.syslog "syslog" {
  listener {
    address            = "0.0.0.0:1601"
    protocol           = "tcp"
    idle_timeout       = "0s"
    syslog_format      = "rfc3164"
    max_message_length = 0
    labels = {
      job       = "syslog",
      component = "syslog_listener",
      protocol  = "tcp",
    }
  }

  listener {
    address            = "0.0.0.0:1514"
    protocol           = "udp"
    idle_timeout       = "0s"
    syslog_format      = "rfc3164"
    max_message_length = 0
    labels = {
      job       = "syslog",
      component = "syslog_listener",
      protocol  = "udp",
    }
  }

  forward_to    = [loki.write.syslog.receiver]
  relabel_rules = discovery.relabel.syslog.rules
}

// Forward logs to Loki
loki.write "syslog" {
  endpoint {
    url       = "http://localhost:3100/loki/api/v1/push"
    tenant_id = "default"
  }
}

// Send internal Alloy metrics to Prometheus
prometheus.remote_write "metrics_service" {
  endpoint {
    url = "http://localhost:9090/api/v1/write"
  }
}
